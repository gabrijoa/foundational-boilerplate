# .github/workflows/ci.yml

name: CI - Backend Tests

# Gatilhos: Roda em pushes e pull requests para a branch main
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # Nome do nosso "trabalho"
  test-backend:
    runs-on: ubuntu-latest # A máquina virtual que será usada

    # Define os serviços que este job precisa. É como um mini docker-compose!
    services:
      # Damos um nome ao nosso serviço de banco de dados: 'postgres'
      postgres:
        image: postgres:16-alpine # A imagem Docker a ser usada
        # Variáveis de ambiente para o contêiner do banco de teste
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb
        ports:
          - 5432:5432 # Mapeia a porta para o runner
        # Verificação de saúde para garantir que o banco está pronto
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # 1. Baixa o seu código do repositório
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Configura o ambiente Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      # 3. Instala todas as dependências do projeto
      - name: Install dependencies
        run: npm install

      # 4. Aplica as migrações no banco de dados de teste
      - name: Run Prisma migrations
        run: npx prisma migrate deploy
        env:
          # A URL de conexão aponta para o serviço 'postgres' que criamos
          # Note que o host é 'localhost' porque o GitHub Actions mapeia os serviços para a rede local do runner
          DATABASE_URL: "postgresql://testuser:testpassword@localhost:5432/testdb?schema=public"

      # 5. Roda os testes do backend
      - name: Run backend tests
        run: npm test -w backend
        env:
          # Os testes também precisam saber como se conectar ao banco
          DATABASE_URL: "postgresql://testuser:testpassword@localhost:5432/testdb?schema=public"